// <auto-generated />
using System;
using HR;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HR.Migrations
{
    [DbContext(typeof(HrDbContext))]
    [Migration("20250719073210_seeding_Admin_user")]
    partial class seeding_Admin_user
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HR.Models.Department", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FloorNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("TypeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("HR.Models.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ManagerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("PositionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ManagerId");

                    b.HasIndex("PositionId");

                    b.HasIndex("UserId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("HR.Models.Lookup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("MajorCode")
                        .HasColumnType("int");

                    b.Property<int>("MinorCode")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Lookup");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            MajorCode = 0,
                            MinorCode = 0,
                            Name = "Employee Positions"
                        },
                        new
                        {
                            Id = 2L,
                            MajorCode = 0,
                            MinorCode = 1,
                            Name = "HR"
                        },
                        new
                        {
                            Id = 3L,
                            MajorCode = 0,
                            MinorCode = 2,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 4L,
                            MajorCode = 0,
                            MinorCode = 3,
                            Name = "Developer"
                        },
                        new
                        {
                            Id = 5L,
                            MajorCode = 1,
                            MinorCode = 0,
                            Name = "Department Types"
                        },
                        new
                        {
                            Id = 6L,
                            MajorCode = 1,
                            MinorCode = 1,
                            Name = "Finance"
                        },
                        new
                        {
                            Id = 7L,
                            MajorCode = 1,
                            MinorCode = 2,
                            Name = "Adminstrative"
                        },
                        new
                        {
                            Id = 8L,
                            MajorCode = 1,
                            MinorCode = 3,
                            Name = "Technical"
                        });
                });

            modelBuilder.Entity("HR.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            HashedPassword = "$2a$11$qc5hdfdYOdR2AOrF33a/N.W9BbiyLcf1n6VZjJPqAxJUE5d8wqByG",
                            IsAdmin = true,
                            UserName = "Admin"
                        });
                });

            modelBuilder.Entity("HR.Models.Department", b =>
                {
                    b.HasOne("HR.Models.Lookup", "Lookup")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.Navigation("Lookup");
                });

            modelBuilder.Entity("HR.Models.Employee", b =>
                {
                    b.HasOne("HR.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("HR.Models.Employee", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId");

                    b.HasOne("HR.Models.Lookup", "Lookup")
                        .WithMany()
                        .HasForeignKey("PositionId");

                    b.HasOne("HR.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Department");

                    b.Navigation("Lookup");

                    b.Navigation("Manager");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
