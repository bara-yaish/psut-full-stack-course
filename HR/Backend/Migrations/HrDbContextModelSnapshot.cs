// <auto-generated />
using System;
using HR;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HR.Migrations
{
    [DbContext(typeof(HrDbContext))]
    partial class HrDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HR.Models.Department", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FloorNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("TypeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "IT Department",
                            FloorNumber = 1,
                            Name = "IT",
                            TypeId = -8L
                        },
                        new
                        {
                            Id = 2L,
                            Description = "HR Department",
                            FloorNumber = 2,
                            Name = "HR",
                            TypeId = -7L
                        });
                });

            modelBuilder.Entity("HR.Models.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ManagerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("PositionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ManagerId");

                    b.HasIndex("PositionId");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DepartmentId = 1L,
                            IsActive = true,
                            Name = "manager",
                            PositionId = -3L,
                            StartDate = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            DepartmentId = 1L,
                            IsActive = true,
                            Name = "employee",
                            PositionId = -4L,
                            StartDate = new DateTime(2025, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HR.Models.Lookup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("MajorCode")
                        .HasColumnType("int");

                    b.Property<int>("MinorCode")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Lookups");

                    b.HasData(
                        new
                        {
                            Id = -1L,
                            MajorCode = 0,
                            MinorCode = 0,
                            Name = "Employee Positions"
                        },
                        new
                        {
                            Id = -2L,
                            MajorCode = 0,
                            MinorCode = 1,
                            Name = "HR"
                        },
                        new
                        {
                            Id = -3L,
                            MajorCode = 0,
                            MinorCode = 2,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = -4L,
                            MajorCode = 0,
                            MinorCode = 3,
                            Name = "Developer"
                        },
                        new
                        {
                            Id = -5L,
                            MajorCode = 1,
                            MinorCode = 0,
                            Name = "Department Types"
                        },
                        new
                        {
                            Id = -6L,
                            MajorCode = 1,
                            MinorCode = 1,
                            Name = "Finance"
                        },
                        new
                        {
                            Id = -7L,
                            MajorCode = 1,
                            MinorCode = 2,
                            Name = "Adminstrative"
                        },
                        new
                        {
                            Id = -8L,
                            MajorCode = 1,
                            MinorCode = 3,
                            Name = "Technical"
                        },
                        new
                        {
                            Id = -9L,
                            MajorCode = 2,
                            MinorCode = 0,
                            Name = "Vacation Types"
                        },
                        new
                        {
                            Id = -10L,
                            MajorCode = 2,
                            MinorCode = 1,
                            Name = "Annual Vacation"
                        },
                        new
                        {
                            Id = -11L,
                            MajorCode = 2,
                            MinorCode = 2,
                            Name = "Sick Vacation"
                        },
                        new
                        {
                            Id = -12L,
                            MajorCode = 2,
                            MinorCode = 3,
                            Name = "Unpaid Vacation"
                        });
                });

            modelBuilder.Entity("HR.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            HashedPassword = "$2a$11$MVRXCTLgV2dEBLH931VhPOUHtGqqfZ.006p2emcvtxwyRAT90ngym",
                            IsAdmin = true,
                            UserName = "Admin"
                        });
                });

            modelBuilder.Entity("HR.Models.Vacation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("TypeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("TypeId");

                    b.ToTable("Vacations");
                });

            modelBuilder.Entity("HR.Models.Department", b =>
                {
                    b.HasOne("HR.Models.Lookup", "Lookup")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.Navigation("Lookup");
                });

            modelBuilder.Entity("HR.Models.Employee", b =>
                {
                    b.HasOne("HR.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("HR.Models.Employee", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId");

                    b.HasOne("HR.Models.Lookup", "Lookup")
                        .WithMany()
                        .HasForeignKey("PositionId");

                    b.HasOne("HR.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Department");

                    b.Navigation("Lookup");

                    b.Navigation("Manager");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HR.Models.Vacation", b =>
                {
                    b.HasOne("HR.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HR.Models.Lookup", "Lookup")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Lookup");
                });
#pragma warning restore 612, 618
        }
    }
}
